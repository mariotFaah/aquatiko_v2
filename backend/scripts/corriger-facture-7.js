// scripts/corriger-facture-7.js
import { db } from '../src/core/database/connection.js';
import { JournalService } from '../src/modules/comptabilite/services/JournalService.js';

async function corrigerFacture7() {
  console.log('üîß Correction de la facture 7...');
  
  const journalService = new JournalService();
  
  // 1. Supprimer les anciennes √©critures de la facture 7
  await db('ecritures_comptables').where('reference', '7').del();
  console.log('‚úÖ Anciennes √©critures facture 7 supprim√©es');
  
  // 2. R√©cup√©rer la facture 7
  const facture7 = await db('factures')
    .where('numero_facture', 7)
    .first();
  
  if (!facture7) {
    console.log('‚ùå Facture 7 non trouv√©e');
    return;
  }
  
  console.log('üìã Facture 7 trouv√©e:', facture7);
  
  // 3. R√©g√©n√©rer les √©critures avec la logique corrig√©e
  await journalService.genererEcritureFacture(facture7);
  console.log('‚úÖ Nouvelles √©critures facture 7 cr√©√©es');
  
  // 4. V√©rifier le r√©sultat
  const nouvellesEcritures = await db('ecritures_comptables')
    .where('reference', '7')
    .select('*');
  
  console.log('üîç Nouvelles √©critures:');
  nouvellesEcritures.forEach(ecriture => {
    console.log(`- ${ecriture.numero_ecriture}: ${ecriture.compte} | D√©bit: ${ecriture.debit} | Cr√©dit: ${ecriture.credit}`);
  });
}

corrigerFacture7().catch(console.error);
